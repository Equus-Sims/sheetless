<?php

define("EQUUS_BANK_ID", 274);

/**
 * Implements hook_entity_info_alter().
 */

function equus_core_entity_info_alter(&$entity_info) {
	$entity_info['node']['view modes']['tiles'] = array(
		'label' => t('Tiles'),
		'custom settings' => TRUE,
	);

	$entity_info['node']['view modes']['thumbnail'] = array(
		'label' => t('Thumbnails'),
		'custom settings' => TRUE,
	);
}

function equus_core_block_info() {
	$blocks = array();

	$blocks['stats'] = array(
		'info' => t('Stats'),
		'region' => 'sidebar_first',
		'visibility' => BLOCK_VISIBILITY_LISTED,
		'pages' => 'user/*/profile'
	);

	$blocks['footer_logo'] = array(
		'info' => t('Footer Logo'),
	);
	
	return $blocks;
}

function equus_core_block_view($delta='') {
	$block = array();

	switch($delta) {
		case 'stats':
			$vars = array('stats' => array());
			$block['title'] = "Stats";
			$block['content'] = theme('equus_stats', $vars);
			break;
		case 'footer_logo':
			$vars = array('footer_logo' => array());
			$block['content'] = theme('equus_footer_logo', $vars);
			break;
	}

	return $block;
}

function equus_core_theme() {
	return array(
		'equus_stats' => array(
			'variables' => array(),
			'template' => 'equus_stats',
		),
		'equus_footer_logo' => array(
			'variables' => array(),
			'template' => 'equus_footer_logo',
		),
		'equus_toolbar' => array(
			'variables' => array(),
			'template' => 'equus_toolbar',
		),
	);
}

/**
 * Implements hook_admin_paths().
 */
function equus_core_admin_paths() {
  $paths = array(
    // Exclude the block demonstration page from admin treatment.
    // This allows us to present this page in its true form, full page.
    'admin/dashboard' => FALSE,
    'admin/dashboard/*' => FALSE,
  );
  return $paths;
}

/**
 * Queries the database for a list of stats
 * @return mixed The list of stats
 */
function equus_core_get_stats_list() {
	$result = db_query("SELECT data FROM field_config WHERE `field_name` = 'field_stat'");

	$record = $result->fetchObject();

	$stats = unserialize($record->data);

	return $stats['settings']['allowed_values'];
}

function equus_core_get_es_months() {
	$start = 2013;
	$nowy = date('Y');
	$nowm = date('n');
	return ($nowy-$start)*12 + $nowm + 3;
}

function equus_core_get_es_year() {
	return floor(equus_core_get_es_months() / 4);
}

function equus_core_get_es_season() {
	return equus_core_get_es_months() % 4;
}

function equus_core_get_es_pretty_year() {
	$months = equus_core_get_es_months();
	$year = floor($months / 4);
	$season = $months % 4;
	$seasons = array("Winter","Spring","Summer","Fall");
	return $seasons[$season] . ", Year " . $year;
}

/*
 * TODO: Think of a better name for this function. Named such to prevent Drupal from confusing it with hook_node_load
 */
function equus_core_node_load_2($nid, $type) {
	$node = node_load($nid);

	if (!$node) {
		throw new Exception("Error loading nid: {$nid}. Node does not exist.");
	}

	if ($node->type != $type) {
		throw new Exception("Node type mismatch. Expected: {$type} Loaded: {$node->type}");
	}

	return $node;
}
