<?php
define("EQUUS_MEMBERS_MP_TID",105);
/**
 * Implements hook_entity_info_alter().
 */

function equus_members_entity_info_alter(&$entity_info) {
	$entity_info['user']['view modes']['about'] = array(
		'label' => t('About Me'),
		'custom settings' => TRUE,
	);

	$entity_info['user']['view modes']['chibi_about'] = array(
		'label' => t('Chibi About'),
		'custom settings' => TRUE,
	);
}

/*function equus_members_gallery_image_count($uid) {
	$query = new EntityFieldQuery();
	$query
		->entityCondition('entity_type', 'node')
		->entityCondition('bundle', 'gallery_image')
		->propertyCondition('status', 1)
		->propertyCondition('uid', $uid);
	$result = $query->execute();
	return count($result['node']);
}*/

function equus_members_horse_count($uid) {
	$query = new EntityFieldQuery();
	$query
		->entityCondition('entity_type', 'node')
		->entityCondition('bundle', 'horse')
		->propertyCondition('status', 1)
		->propertyCondition('uid', $uid);
	$result = $query->execute();
	if ($result != NULL) {
		return count($result['node']);
	} else {
		return 0;
	}
}

function equus_members_preprocess_user_profile(&$vars) {
	$vars['theme_hook_suggestions'][] = 'user_profile__' . $vars['elements']['#view_mode'];

	$items = field_get_items('user', $vars['elements']['#account'], 'field_user_dob');
	$date = array_pop($items);
	
	$dob_raw = new DateTime($date['value']);
	$dob = $dob_raw->format('M. d, Y');
	$interval = $dob_raw->diff(new DateTime());
	$vars['user_age'] = $interval->y;
	$vars['user_dob'] = $dob;
	
	setlocale(LC_MONETARY, 'en_US');
	$vars['user_net_worth'] = money_format('%.0n', equus_banking_get_user_net_worth($vars['elements']['#account']->uid));

	$items = field_get_items('user', $vars['elements']['#account'], 'field_user_gender');
	$vars['user_gender'] = $items[0]['value'];

	$items = field_get_items('user', $vars['elements']['#account'], 'field_user_biography');
	$vars['user_biography'] = $items[0]['value'];

	$items = field_get_items('user', $vars['elements']['#account'], 'field_user_location');
	$vars['user_location'] = $items[0]['value'];

	//$vars['gallery_count'] = equus_members_gallery_image_count($vars['elements']['#account']->uid);
	//$vars['horse_count'] = equus_members_horse_count($vars['elements']['#account']->uid);
	//$vars['user_like_count'] = flag_get_user_flags('node'), $vars['elements']['#account']->uid);
}

function equus_members_preprocess_equus_stats(&$vars) {
	$url = explode('/',$_GET['q']);
	$uid = $url[1];

	$vars['stats'][] = array('value'=>equus_members_get_net_worth($uid));
}

function equus_members_update_tutorial_progress($uid, $new_milestone) {
	$account = user_load($uid);

	$edit = array('field_user_tutorial_progress' => $account->field_user_tutorial_progress);
	if (empty($edit)) {
		$edit['field_user_tutorial_progress']['und'] = array();
	}
	$edit['field_user_tutorial_progress']['und'][] = array('value'=>$new_milestone);

	$ret = user_save($account, $edit);
}

function equus_members_check_tutorial_progess($uid, $milestone_check) {
	$user = user_load($uid);

	foreach($user->field_user_tutorial_progress['und'] as $milestone) {
		if ($milestone['value'] == $milestone_check) {
			return true;
		}
	}
	return false;
}

/**
 * Adds some number of Member Points to a user's account
 * @param $uid ID of the user to give MP to.
 * @param $num Number of MP to give a user.
 */
function equus_members_gain_mp($uid, $num) {
	userpoints_userpointsapi(array(
		'uid' => $uid,
		'points' => $num,
		'tid' => EQUUS_MEMBERS_MP_TID
	));
}
