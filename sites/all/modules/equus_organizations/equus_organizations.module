<?php 

define("EQUUS_HORSES_EXTRAS_ORG_CREDIT_TID",60);

/**
 * Implements hook_node_info()
 */
function equus_organizations_node_info() {
	return array(
		'organization' => array(
			'name' => t('Organization'),
			'base' => 'organization',
			'description' => t('An organization'),
			'has_title' => TRUE,
			'title_label' => t('Name')
			
		)
	);
}

function organization_form($node, $form_state) {
	return node_content_form($node, $form_state);
}

function equus_organizations_get_assoc_orgs($uid) {
	$query = new EntityFieldQuery();
	$query
		->entityCondition('entity_type', 'node')
		->entityCondition('bundle', 'organization')
		->propertyCondition('status', 1)
		->propertyCondition('uid', $uid);
	$result = $query->execute();
	$nid_owner = array();
	if (count($result) > 0) {
		$nid_owner = array_keys($result['node']);
	} 

	$query = new EntityFieldQuery();
	$query
		->entityCondition('entity_type', 'node')
		->entityCondition('bundle', 'organization')
		->propertyCondition('status', 1)
		->fieldCondition('field_co_owners', 'target_id', $uid);
	$result = $query->execute();
	$nid_co_owner = array();
	if (count($result) > 0) {
		$nid_co_owner = array_keys($result['node']);
	} 

	$nids = array_merge($nid_owner, $nid_co_owner);
	return $nids;
}

/**
 * Verifies that the user has at least 1 Org Credit in order to create an organization.
 * @param $uid ID of the currently logged in user.
 */
function equus_horses_extras_validate_org_credit_count($uid) {
	$current_org_credit = userpoints_get_current_points($uid, EQUUS_HORSES_EXTRAS_ORG_CREDIT_TID);
	if ($current_org_credit < 1 ) {
		drupal_set_error('You do not have enough Organization Credits to create this organization. Please visit the Store to buy an Organization Credit.');
	}
}